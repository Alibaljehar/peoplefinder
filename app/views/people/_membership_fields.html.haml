- membership = membership_f.object
.membership
  .form-group
    = membership_f.label :role, 'Job title', class: 'form-label-bold'
    = membership_f.text_field :role, class: 'form-control'

  / .form-group
  /   = membership_f.label :group_id, 'Team', class: 'form-label-bold'
  /   %p.form-hint= info_text('hint_add_person_to_team')
  /   = membership_f.collection_select :group_id,
  /     GroupLister.new.list.sort_by { |g| g.path.map(&:to_s) },
  /     :id, :name_with_path, {}, class: 'form-control select-autocomplete team-select'

  .form-group
    = membership_f.label :group_id, 'Team', class: 'form-label-bold'
    .editable-container
      .editable-fields{ style: ('display:none' unless membership.new_record?) }
        - if @org_structure
          = render 'shared/org_browser', org_structure: @org_structure, form: membership_f, field_name: :group_id

      - unless membership.new_record?
        .editable-summary.parent-summary
          - if membership.group.parent
            .title= breadcrumbs(membership.path)
          .cta= link_to 'Edit', '#', class: 'show-editable-fields'

  .form-group.team-leader
    %fieldset.inline
      %legend.form-label-bold= role_translate(membership.person, 'memberships.leader').html_safe
      = membership_f.label :leader, value: true, class: 'block-label' do
        = membership_f.radio_button :leader, true
        Yes
      = membership_f.label :leader, value: false, class: 'block-label' do
        = membership_f.radio_button :leader, false
        No

  .form-group.team-subscribed
    %fieldset.inline
      %legend.form-label-bold= role_translate(membership.person, 'memberships.subscribed')
      = membership_f.label :subscribed, value: true, class: 'block-label' do
        = membership_f.radio_button :subscribed, true
        Yes
      = membership_f.label :subscribed, value: false, class: 'block-label' do
        = membership_f.radio_button :subscribed, false
        No

    .remove-link
      - if membership.new_record?
        = link_to 'Delete', '#', class: 'remove-new-membership'

      - else
        = link_to 'Delete', membership_path(membership,
          referer: request.path),
          method: :delete,
          data: {confirm: "Are you sure you want to remove #{ membership.person} from #{ membership.group }? " }

